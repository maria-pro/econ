---
title: ""
format: html
toc: true
toc-depth: 3
code-fold: false
execute:
  echo: false
  warning: false
  message: false

---

## Total employment by industry 

Australia in 2030 and 2050  - with and without net zero emissions 
the differences between the with and without net zero 



```{r}

library(tidyverse)
library(vroom)
library(plotly)


employ<-vroom("data/employ.csv")

employ_options<-employ%>%
  distinct(industry_group, var)

employ_options<-with(employ_options, split((var),
                       factor(industry_group, levels = unique(industry_group), ordered=TRUE)))

```


Type of vis

### 1 industry - with selectize input in shiny
can zoom/save/etc - see top right corner for icons

```{r}
var1<-"Primary school education services"
var2<-"Sheep and Beef cattle"

res<-employ%>%
  #filter(state=="zero"& var==input$var1)%>%
  filter(var==var1)%>%
  #    filter(year>2022)%>%
  filter(year>=2023)%>%
  ggplot()+
  geom_point(
    aes(x=year, y=value, group=interaction(state, var),
        colour=state,
        shape=var,
        frame=year,
        text = paste("Occupation: ", var,
                     "\nValue: $", value,
                     "\nStatus: ", state,
                     "\nYear: ", year)))+
  theme(
    legend.position="none",
    panel.grid = element_blank(),
    panel.background = element_blank(),
    axis.ticks=element_line(colour = "black"),
    
    axis.line = element_line(colour = "black"),
  )+
  #      scale_x_continuous(name="Selected years", breaks=seq(input$years[1], input$years[2], by=1))+
  scale_y_continuous(name="Effect")

fig<-ggplotly(
       res,

       #      dynamicTicks=TRUE,
       tooltip=c("text")
     )%>%
       layout(hovermode = "x unified")


     fig<-fig %>%
       animation_button(
         x = 0, xanchor = "right", y = 0, yanchor = "bottom"
       )
fig

```


```{r}

library(tidyverse)
library(vroom)


employ<-vroom("data/employ.csv")

employ_options<-employ%>%
  distinct(industry_group, var)

employ_options<-with(employ_options, split((var),
                       factor(industry_group, levels = unique(industry_group), ordered=TRUE)))

```



**different tooltip styling**

can zoom/save/etc - see top right corner for icons

```{r}


res<-employ%>%
  #filter(state=="zero"& var==input$var1)%>%
  filter(var==var1)%>%
  #    filter(year>2022)%>%
  filter(year>=2023)%>%
  ggplot()+
  geom_point(
    aes(x=year, y=value, group=interaction(state, var),
        colour=state,
        shape=var,
        frame=year,
        text = paste("Occupation: ", var,
                     "\nValue: $", value,
                     "\nStatus: ", state,
                     "\nYear: ", year)))+
  theme(
    legend.position="none",
    panel.grid = element_blank(),
    panel.background = element_blank(),
    axis.ticks=element_line(colour = "black"),
    
    axis.line = element_line(colour = "black"),
  )+
  #      scale_x_continuous(name="Selected years", breaks=seq(input$years[1], input$years[2], by=1))+
  scale_y_continuous(name="Effect")

fig<-ggplotly(
       res,

       #      dynamicTicks=TRUE,
       tooltip=c("text")
       
     )%>%
       layout(hovermode = "x")


     fig<-fig %>%
       animation_button(
         x = 0, xanchor = "right", y = 0, yanchor = "bottom"
       )
fig

```


```{r}

res<-employ%>%
  #filter(state=="zero"& var==input$var1)%>%
  filter(var==var1 | var==var2)%>%
  #    filter(year>2022)%>%
  filter(year>=2023)%>%
  ggplot()+
  geom_point(
    aes(x=year, y=value, group=interaction(state, var),
        colour=state,
        shape=var,
        frame=year,
        text = paste("Occupation: ", var,
                     "\nValue: $", value,
                     "\nStatus: ", state,
                     "\nYear: ", year)))+
  theme(
    legend.position="none",
    panel.grid = element_blank(),
    panel.background = element_blank(),
    axis.ticks=element_line(colour = "black"),
    
    axis.line = element_line(colour = "black"),
  )+
  #      scale_x_continuous(name="Selected years", breaks=seq(input$years[1], input$years[2], by=1))+
  scale_y_continuous(name="Effect")

fig<-ggplotly(
       res,

       #      dynamicTicks=TRUE,
       tooltip=c("text")
     )%>%
       layout(hovermode = "x unified")


     fig<-fig %>%
       animation_button(
         x = 0, xanchor = "right", y = 0, yanchor = "bottom"
       )
fig

```

```{r}

fig <- employ%>%
  #filter(state=="zero"& var==input$var1)%>%
  filter(var==var1 #| var==var2
         )%>%
  #    filter(year>2022)%>%
  filter(year>=2023)%>%
  plot_ly(
    x = ~year,
    y = ~value,
  #  size = ~pop,
  #  color = ~var,
  color=~state,
    frame = ~year,
  text = ~paste("Occupation: ", var,
                          "\nValue: $", value, " mln",
                          "\nStatus: ", state,
                          "\nYear: ", year),
  hoverinfo = "text",
  type = 'scatter',
    mode = 'markers')



fig <- fig %>% 
  layout(hovermode = "x unified", 
         showlegend = FALSE,
         xaxis = list(
    title = "Year",
    dtick = 1, 

      tickmode = "linear"
  ),
  yaxis = list(
    title = "Value"
  )
  )

fig<-fig %>%
       animation_button(
         x = 0, xanchor = "right", y = 0, yanchor = "bottom"
       )
fig

```

